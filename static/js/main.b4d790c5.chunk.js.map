{"version":3,"sources":["components/CalcKey/CalcKey.js","helperBin/digitGridArray.js","components/DigitGrid/DigitGrid.js","helperBin/operatorArray.js","components/OperatorsGrid/OperatorsGrid.js","helperBin/motivation.js","components/Display/Display.js","App.js","serviceWorker.js","index.js"],"names":["calcKey","props","react_default","a","createElement","className","onClick","click","id","keyValue","digitGridArray","DigitGrid","map","item","CalcKey","key","operatorArray","OperatorsGrid","OperatorArray","quotes","quote","display","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clearHandler","bind","assertThisInitialized","inputHandler","mathHandler","motivateHandler","setState","isDecimal","isOperator","lastItem","length","newDisplay","split","usableDisplay","splice","join","total","safeEval","e","newValue","target","textContent","prevState","oldValue","replace","newQuote","Math","floor","random","src","width","height","alt","Display","components_DigitGrid_DigitGrid","components_OperatorsGrid_OperatorsGrid","role","aria-label","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4d790c5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst calcKey = props => {\r\n    return (\r\n        <button className=\"button\" onClick={props.click} id={props.id}>{props.keyValue}</button>\r\n    )\r\n}\r\n\r\nexport default calcKey;","const digitGridArray = [\r\n    {\r\n        id: 'zero',\r\n        keyValue: 0\r\n    },\r\n    {\r\n        id: 'one',\r\n        keyValue: 1\r\n    },\r\n    {\r\n        id: 'two',\r\n        keyValue: 2\r\n    },\r\n    {\r\n        id: 'three',\r\n        keyValue: 3\r\n    },\r\n    {\r\n        id: 'four',\r\n        keyValue: 4\r\n    },\r\n    {\r\n        id: 'five',\r\n        keyValue: 5\r\n    },\r\n    {\r\n        id: 'six',\r\n        keyValue: 6\r\n    },\r\n    {\r\n        id: 'seven',\r\n        keyValue: 7\r\n    },\r\n    {\r\n        id: 'eight',\r\n        keyValue: 8\r\n    },\r\n    {\r\n        id: 'nine',\r\n        keyValue: 9\r\n    },\r\n    {\r\n        id: 'decimal',\r\n        keyValue: '.'\r\n    },\r\n]\r\n\r\nexport default digitGridArray;","import React from 'react';\r\nimport CalcKey from '../CalcKey/CalcKey';\r\nimport digitGridArray from '../../helperBin/digitGridArray';\r\n\r\nconst DigitGrid = props => {\r\n\r\n    let completeGrid = digitGridArray.map(item => {\r\n        return <CalcKey \r\n        id={item.id} \r\n        keyValue={item.keyValue} \r\n        key={item.keyValue}\r\n        click={props.click} />\r\n    });\r\n\r\n    return completeGrid;\r\n}\r\n\r\n\r\nexport default DigitGrid;","const operatorArray = [\r\n    {\r\n        id: 'add',\r\n        keyValue: '+'\r\n    },\r\n    {\r\n        id: 'subtract',\r\n        keyValue: '-'\r\n    },\r\n    {\r\n        id: 'multiply',\r\n        keyValue: '*'\r\n    },\r\n    {\r\n        id: 'divide',\r\n        keyValue: '/'\r\n    },\r\n]\r\n\r\nexport default operatorArray;","import React from 'react';\r\n\r\nimport CalcKey from '../CalcKey/CalcKey';\r\n\r\nimport OperatorArray from '../../helperBin/operatorArray';\r\n\r\nconst OperatorsGrid = props => {\r\n    let completeGrid = OperatorArray.map(item => {\r\n        return <CalcKey \r\n        id={item.id} \r\n        keyValue={item.keyValue} \r\n        key={item.keyValue} \r\n        click={props.click}/>\r\n    });\r\n    return completeGrid;\r\n}\r\n\r\nexport default OperatorsGrid;","let quotes = [\r\n    {\r\n        id: 0,\r\n        quote: \"Live Your Dream.\"\r\n    },\r\n    {\r\n        id: 1,\r\n        quote: \"Be You.\"\r\n    },\r\n    {\r\n        id: 2,\r\n        quote: \"You are amazing.\"\r\n    },\r\n    {\r\n        id: 3,\r\n        quote: \"You are enough.\"\r\n    },\r\n    {\r\n        id: 4,\r\n        quote: \"Keep going.\"\r\n    },\r\n    {\r\n        id: 5,\r\n        quote: \"Make yourself a priority.\"\r\n    },\r\n    {\r\n        id: 6,\r\n        quote: \"No rain. No flowers.\"\r\n    },\r\n    {\r\n        id: 7,\r\n        quote: \"Shine like the stars.\"\r\n    },\r\n    {\r\n        id: 8,\r\n        quote: \"Be a voice. Not an echo.\"\r\n    },\r\n    {\r\n        id: 9,\r\n        quote: \"Every wall is a door.\"\r\n    },\r\n    {\r\n        id: 10,\r\n        quote: \"Do all things with love. \"\r\n    },\r\n    {\r\n        id: 11,\r\n        quote: \"Be happy, bright. Be you.\"\r\n    },\r\n    {\r\n        id: 12,\r\n        quote: \"Love over Fear.\"\r\n    },\r\n    {\r\n        id: 13,\r\n        quote: \"Let it be.\"\r\n    },\r\n    {\r\n        id: 14,\r\n        quote: \"Choose joy.\"\r\n    },\r\n    {\r\n        id: 15,\r\n        quote: \"What we think, we become.\"\r\n    },\r\n    {\r\n        id: 16,\r\n        quote: \"No pain, no gain.\"\r\n    },\r\n    {\r\n        id: 17,\r\n        quote: \"Prove them wrong.\"\r\n    },\r\n    {\r\n        id: 18,\r\n        quote: \"Keep moving forward.\"\r\n    },\r\n    {\r\n        id: 19,\r\n        quote: \"Love more. Worry less.\"\r\n    },\r\n    {\r\n        id: 20,\r\n        quote: \"Find yourself, and be that.\"\r\n    },\r\n    {\r\n        id: 21,\r\n        quote: \"Gratitude changes everything.\"\r\n    },\r\n    {\r\n        id: 22,\r\n        quote: \"Count your blessings.\"\r\n    },\r\n    {\r\n        id: 23,\r\n        quote: \"Fewer things. More peace.\"\r\n    },\r\n    {\r\n        id: 24,\r\n        quote: \"Kindness is beautiful.\"\r\n    },\r\n    {\r\n        id: 25,\r\n        quote: \"Be true to you.\"\r\n    },\r\n    {\r\n        id: 26,\r\n        quote: \"More life, less rush.\"\r\n    },\r\n    {\r\n        id: 27,\r\n        quote: \"You are beautiful.\"\r\n    },\r\n    {\r\n        id: 28,\r\n        quote: \"Good things take time.\"\r\n    },\r\n    {\r\n        id: 29,\r\n        quote: \"Own less. Do more.\"\r\n    },\r\n]\r\n\r\nexport default quotes;","import React from 'react';\r\n\r\nlet display = props => {\r\n    return (\r\n        <div>\r\n            <h3 id=\"display\">{props.display}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default display;","import React, { Component } from 'react';\nimport './App.css';\n\nimport DigitGrid from './components/DigitGrid/DigitGrid';\nimport OperatorsGrid from './components/OperatorsGrid/OperatorsGrid';\nimport quotes from './helperBin/motivation';\nimport Display from './components/Display/Display';\n\nimport safeEval from 'safe-eval';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: '0'\n    }\n\n    this.clearHandler = this.clearHandler.bind(this);\n    this.inputHandler = this.inputHandler.bind(this);\n    this.mathHandler = this.mathHandler.bind(this);\n    this.motivateHandler = this.motivateHandler.bind(this);\n  }\n\n  clearHandler() {\n    this.setState({\n      display: '0',\n      isDecimal: false,\n      isOperator: false\n    });\n  }\n\n  mathHandler() {\n    let lastItem = this.state.display[this.state.display.length - 1];\n    if (lastItem === '+' || lastItem === '-' || lastItem === '*' || lastItem === '/') {\n      let newDisplay = this.state.display.split('');\n      let usableDisplay = newDisplay.splice(0, newDisplay.length - 1).join('');\n      let total = safeEval(usableDisplay);\n      this.setState({\n        isDecimal: false,\n        isOperator: false,\n        display: total\n      });\n    }\n    else {\n      let total = safeEval(this.state.display);\n      this.setState({\n        isDecimal: false,\n        isOperator: false,\n        display: total\n      });\n    }\n  }\n\n  inputHandler(e) {\n    let newValue = e.target.textContent;\n    if (this.state.display === '0') {\n      this.setState({\n        display: newValue\n      });\n    }\n    else {\n      if (this.state.isDecimal && newValue === '.') {\n        return;\n      }\n      if (this.state.isOperator && (newValue === '+' || newValue === '-' || newValue === '*' || newValue === '/')) {\n        this.setState(prevState => {\n          let oldValue = prevState.display[prevState.display.length - 1];\n          return {\n            display: prevState.display.replace(oldValue, newValue)\n          }\n        })\n      }\n      else {\n        this.setState(prevState => {\n          if (newValue === '.') {\n            return {\n              isDecimal: true,\n              isOperator: false,\n              display: prevState.display += newValue\n            }\n          }\n          else if (newValue === '+' || newValue === '-' || newValue === '*' || newValue === '/') {\n            return {\n              isDecimal: false,\n              isOperator: true,\n              display: prevState.display += newValue\n            }\n          }\n          else {\n            return {\n              isOperator: false,\n              display: prevState.display += newValue\n            }\n          }\n        })\n      }\n    }\n  }\n\n  motivateHandler() {\n    let newQuote = quotes[Math.floor(Math.random() * 20)].quote;\n    this.setState({\n      display: newQuote,\n      isDecimal: false,\n      isOperator: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"headerContainer\">\n        <img src=\"https://i.ibb.co/mchrNYL/45-Q58-PIC16bj-G40-Rptbcr-PIC2018.png\" width=\"50px\" height=\"50px\" alt=\"logo\" />\n        <h5>Beaufort Tek</h5>\n        <div className=\"solarContainer\">\n          <div className=\"solar\"></div>\n          <div className=\"solar\"></div>\n          <div className=\"solar\"></div>\n          <div className=\"solar\"></div>\n        </div>\n        <h3>BOW-84 Plus</h3>\n        </div>\n\n        <Display display={this.state.display}/>\n        <div className=\"buttonsContainer\">\n          <DigitGrid id=\"digits\" click={this.inputHandler}/>\n          <OperatorsGrid id=\"operators\" click={this.inputHandler}/>\n          <button className=\"equals button\" onClick={this.mathHandler} id=\"equals\">=</button>\n          <button className=\"clear button\" onClick={this.clearHandler} id=\"clear\">AC</button>\n          <button className=\"button motivate\" id=\"motivated\" onClick={this.motivateHandler}><span role=\"img\" aria-label=\"motivate quote\">💪🏻</span></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}